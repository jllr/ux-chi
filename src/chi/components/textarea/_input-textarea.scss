@import '_variables';
@import '_mixins';

$sizes: (
  sm: (
    font-size: 0.75rem,
    line-height: 1rem,
    min-height: 3.5rem,
    padding: 0.1875rem 0.4375rem
  ),
  md: (
    font-size: 0.875rem,
    line-height: 1rem,
    min-height: 4rem,
    padding: 0.4375rem 0.6875rem
  ),
  lg: (
    font-size: 0.875rem,
    line-height: 1.25rem,
    min-height: 5.5rem,
    padding: 0.5rem 0.6875rem
  ),
  xl: (
    font-size: 0.875rem,
    line-height: 1.25rem,
    min-height: 7rem,
    padding: 0.75rem 0.625rem
  )
);

textarea {
  &.chi-input {
    border: 0.0625rem solid set-color(grey, 30);
    color: $text-color;
    display: block;
    font-size: $text;
    line-height: $line-height-smaller;
    min-height: 4rem;
    outline: none;
    padding: 0.4375rem 0.6875rem;
    resize: none;
    transition: all 0.15s ease-in-out;
    width: 100%;

    &::placeholder {
      color: set-color(grey, 50);
    }

    &:hover,
    &.-hover {
      border-color: set-color(grey, 40);
    }

    &:focus,
    &.-focus {
      border-color: $focus-color;
      box-shadow: 0 0 0 1px rgba($focus-color, 1);
    }

    &[disabled],
    &.-disabled {
      background-color: set-color(grey, 10);
      border-color: set-color(grey, 30);
      color: set-color(grey, 90);
    }

    @each $type in map-keys($sizes) {
      &.-#{$type} {
        font-size: map-get(map-get($sizes, $type), font-size);
        line-height: map-get(map-get($sizes, $type), line-height);
        min-height: map-get(map-get($sizes, $type), min-height);
        padding: map-get(map-get($sizes, $type), padding);
      }
    }

    @each $type in map-keys($state-colors) {
      &:not([disabled]) {
        &.-#{$type} {
          border-color: set-color(map-get($state-colors, $type), 55);
        }
      }

      &.-#{$type} {
        color: set-color(grey, 90);

        &:focus,
        &.-focus {
          box-shadow: 0 0 0 1px rgba(set-color(map-get($state-colors, $type), 55), 1);
        }
      }
    }
  }
}
